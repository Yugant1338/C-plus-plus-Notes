Constructor in C++:
Notes: 
Constructor are basically a special type of functions inside a class that are used to do some work or perform some series of specific action.
Constructor is named same as the class name, and it does not contains any return type alike functions.
Multiple constructor with the class name can be declared inside a class but they must contain different arguments and parameters,
when the specific constructor is called the compiler compare the arguments and calls the specific constructor.
A constructor can be called inside the main function using.
As soon as the class is decalred i.e. the object is decalared in the main function the constructor is used and the specific action performed 
by it in the function defination will be taken place.

Syntax:
#inlclude<iostream>
class class_name{
   public:
   class_name(parameters){
	    //body
	} 
};
int main(){
   class_name objname;//As soon as the objname is declared 
   return 0;
}

Example 1(Constructor Call)
#inlclude<iostream>
class helloworld{
   public:
   helloworld(){
 	cout << "Hello World!";
   } 
};
int main(){
   helloworld ok;//As soon as the objname is declared the function is called
   return 0;
}
// Output will be Hello World!

Example 2(Constructor with parameters and arguments)
#inlclude<iostream>
class add{
   public:
   add(int x,int y){
	    cout<< x+y;
   } 
};
int main(){
   int num1,num2;
   cin >> num1 >> num2;
   add objname(num1,num2);//As soon as the objname is declared the function is called
   return 0;
}
// The sum of num1 and num2 will be printed as output.

Example 3(Multiple constructors in a class):
#inlclude<iostream>
class addition{
   public:
   addition(int x,int y,int z){
	cout << x+y+z << endl; 
   }
   addition (int x,int y){
	cout << x+y << endl;
   }
};
int main(){
   int num1,num2,num2
   addition objname1(num1,num2,num3);//As soon as the objname is declared the function is called
   addition objname2(num1,num2);// Another object is declared in order to call the other constructor
   // Different object name should be used in order to use different constructor even if they the construcor are named same as the class.
   return 0;
}
// Output will ~ for first constructor the output will be sum of num1,num2,num3
// where as for the second constructor the output will be the sum num1,num2
